package com.stonespells.controllers.spells.eddition1;

import com.stonespells.controllers.spells.ISpellCommand;
import com.stonespells.controllers.spells.SpellCommand;
import com.stonespells.models.gameboard.PlayerProxy;
import com.stonespells.models.gameboard.SpellListProxy;
import com.stonespells.models.gameboard.SpellProxy;

public class Yellow2Spell extends SpellCommand implements ISpellCommand {

	public byte[] getImageBytes() {
		return new byte[] {0, 0, 0, 14, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 1, 38, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 1, 0, 0, 0, 107, 0, 0, 0, -44, 0, 0, 0, 110, 0, 0, 0, 5, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 49, 0, 0, 0, -102, 0, 0, 0, -1, 68, 68, 51, -1, -69, -86, 119, -1, 85, 85, 51, 122, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 52, 0, 0, 0, -1, 0, 0, 0, -1, 119, 119, 85, -1, -18, -35, -86, -1, -18, -18, -69, -1, -69, -69, -120, -1, 0, 0, 0, 20, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 57, 0, 0, 0, -1, 0, 0, 0, -1, 119, 119, 68, -1, -35, -35, -86, -1, -35, -35, -86, -1, -18, -18, -69, -1, -35, -35, -103, -1, 34, 34, 17, 61, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, -94, 0, 0, 0, -1, 119, 119, 68, -1, -52, -35, -86, -1, -52, -35, -86, -1, -35, -35, -86, -1, -18, -18, -69, -1, -35, -35, -86, -1, 68, 68, 34, 96, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, -119, 0, 0, 0, -1, 68, 51, 34, -1, -52, -52, -103, -1, -69, -52, -86, -1, -52, -35, -69, -1, -35, -35, -69, -1, -18, -18, -69, -1, -18, -35, -86, -1, 85, 85, 51, 116, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 76, 0, 0, 0, -1, 17, 17, 0, -1, -69, -69, -120, -1, -52, -35, -86, -1, -69, -52, -86, -1, -35, -18, -52, -1, -52, -35, -69, -1, -18, -18, -69, -1, -18, -35, -86, -1, 102, 85, 51, -127, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 1, 0, 0, 0, -1, 0, 0, 0, -1, 119, 119, 85, -1, -35, -35, -86, -1, -69, -52, -86, -1, -52, -35, -69, -1, -18, -18, -35, -1, -52, -35, -69, -1, -35, -18, -69, -1, -35, -35, -86, -1, 102, 102, 68, -123, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 114, 0, 0, 0, -1, 68, 51, 34, -1, -69, -52, -120, -1, -52, -35, -86, -1, -52, -52, -86, -1, -35, -35, -69, -1, -18, -18, -35, -1, -35, -35, -69, -1, -35, -35, -69, -1, -35, -35, -103, -1, 85, 85, 51, 124, 0, 0, 0, 0, -1, -1, -1, 7, 0, 0, 0, -1, 0, 0, 0, -1, -103, -103, 85, -1, -52, -35, -86, -1, -52, -52, -86, -1, -52, -52, -86, -1, -35, -18, -52, -1, -18, -18, -52, -1, -35, -18, -69, -1, -35, -35, -86, -1, -35, -35, -120, -1, 85, 68, 34, 112, 0, 0, 0, 0, -1, -1, -1, 86, 0, 0, 0, -1, 51, 51, 17, -1, -69, -69, 119, -1, -35, -35, -86, -1, -52, -52, -103, -1, -52, -52, -86, -1, -35, -35, -69, -1, -18, -1, -35, -1, -35, -18, -69, -1, -35, -35, -103, -1, -35, -52, 119, -1, 51, 51, 17, 97, 0, 0, 0, 0, -1, -1, -1, -65, 0, 0, 0, -1, -120, 119, 68, -1, -52, -52, -120, -1, -35, -35, -69, -1, -52, -52, -103, -1, -52, -52, -103, -1, -35, -35, -86, -1, -1, -1, -18, -1, -35, -35, -86, -1, -35, -35, -120, -1, -35, -52, 85, -1, 34, 34, 0, 69, 0, 0, 0, 31, 0, 0, 0, -1, 17, 17, 0, -1, -86, -86, 85, -1, -35, -35, -103, -1, -35, -35, -86, -1, -52, -52, -120, -1, -52, -52, -103, -1, -35, -18, -69, -1, -1, -1, -35, -1, -35, -35, -103, -1, -35, -52, 119, -1, -52, -86, 68, -1, 17, 17, 0, 41, 0, 0, 0, 99, 0, 0, 0, -1, 68, 51, 17, -1, -69, -86, 102, -1, -35, -35, -86, -1, -52, -52, -120, -1, -52, -52, 119, -1, -52, -52, -120, -1, -35, -35, -86, -1, -35, -35, -86, -1, -52, -52, 119, -1, -35, -52, 102, -1, -86, -120, 34, -1, 0, 0, 0, 12, 0, 0, 0, -90, 0, 0, 0, -1, 102, 85, 34, -1, -69, -86, 102, -1, -35, -35, -103, -1, -52, -69, 102, -1, -52, -69, 102, -1, -52, -52, 119, -1, -52, -52, -120, -1, -52, -52, 119, -1, -35, -52, 102, -1, -35, -52, 85, -1, 119, 85, 17, -88, 0, 0, 0, 0, -1, -1, -1, -28, 0, 0, 0, -1, -86, 119, 17, -1, -69, -86, 85, -1, -35, -52, 119, -1, -69, -86, 68, -1, -52, -69, 85, -1, -52, -69, 102, -1, -52, -69, 102, -1, -35, -69, 85, -1, -35, -69, 68, -1, -35, -69, 51, -1, 68, 51, 0, 104, 0, 0, 0, 0, -1, -1, -1, -38, 0, 0, 0, -1, -86, 119, 0, -1, -52, -86, 51, -1, -52, -86, 68, -1, -69, -86, 51, -1, -52, -86, 68, -1, -52, -69, 68, -1, -52, -69, 68, -1, -52, -86, 51, -1, -35, -69, 51, -1, -35, -86, 17, -1, 17, 17, 0, 35, 0, 0, 0, 0, -1, -1, -1, 126, 0, 0, 0, -1, 85, 51, 0, -1, -35, -103, 34, -1, -52, -103, 34, -1, -52, -103, 17, -1, -52, -86, 34, -1, -52, -86, 51, -1, -52, -86, 34, -1, -52, -86, 34, -1, -35, -86, 34, -1, -103, 119, 0, -56, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 21, 0, 0, 0, -1, 0, 0, 0, -1, -86, 119, 34, -1, -35, -86, 34, -1, -35, -103, 0, -1, -52, -103, 0, -1, -52, -103, 17, -1, -52, -103, 17, -1, -52, -86, 17, -1, -35, -86, 0, -1, 68, 51, 0, 101, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 99, 0, 0, 0, -1, 0, 0, 0, -1, -120, 85, 17, -1, -52, -120, 0, -1, -52, -120, 0, -1, -52, -120, 0, -1, -52, -103, 0, -1, -52, -103, 0, -1, -86, 119, 0, -1, 0, 0, 0, 12, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 69, 0, 0, 0, -82, 0, 0, 0, -20, 0, 0, 0, -19, 0, 0, 0, -19, 0, 0, 0, -19, 0, 0, 0, -19, 0, 0, 0, -51, 0, 0, 0, 100, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1};
 	}

	public void onCast() {
		PlayerProxy opponent = this.getPlayContext().getOpponent();
		
		SpellListProxy slpO = opponent.getSpellList();
		slpO.getSpellAt(spell.getPosition()).setLocked(true);
	}

	public void onCreate() {
		spell.setId(18);
		spell.setName("Ancient Gold");
		spell.setDescription("Locks one of the opponent's stones at same position as this.");
		spell.setColor(SpellProxy.COLOR_GOLD);
		spell.setCost(6);

	}

	public void onEnergize() {
		// TODO Auto-generated method stub

	}

	public void onSwapPosition() {
		// TODO Auto-generated method stub

	}

	public void onTurnBegin() {
		// TODO Auto-generated method stub

	}

	public void onTurnEnd() {
		// TODO Auto-generated method stub

	}

}
