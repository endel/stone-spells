package com.stonespells.controllers.spells.eddition1;

import com.stonespells.controllers.spells.ISpellCommand;
import com.stonespells.controllers.spells.SpellCommand;
import com.stonespells.models.gameboard.PlayerProxy;
import com.stonespells.models.gameboard.SpellListProxy;
import com.stonespells.models.gameboard.SpellProxy;
import com.stonespells.models.gameboard.communication.PlayContextProxy;

public class Green1Spell extends SpellCommand implements ISpellCommand {

	public byte[] getImageBytes() {
		return new byte[] {0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 1, -50, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, 0, 0, 0, 26, 0, 0, 0, -125, 0, 0, 0, -68, 0, 0, 0, -16, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -6, 0, 0, 0, -44, 0, 0, 0, 126, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 8, 0, 0, 0, -127, 0, 0, 0, -1, 17, 17, 17, -1, 85, 102, 68, -1, 68, -120, 68, -1, 119, -52, 119, -1, 85, -86, 85, -1, 68, -103, 68, -1, 51, -86, 68, -1, 85, -69, 85, -1, 51, 102, 51, -1, 0, 17, 0, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 36, 0, 0, 0, -106, 0, 0, 0, -1, 51, 85, 51, -1, 119, -86, 102, -1, 34, 102, 34, -1, 34, 119, 51, -1, 102, -35, 102, -1, 17, 102, 17, -1, 68, -86, 68, -1, -120, -52, -120, -1, 85, -69, 102, -1, 17, 119, 34, -1, 85, -86, 85, -1, 34, 68, 51, -106, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 27, 0, 0, 0, -106, 0, 0, 0, -1, 51, 119, 68, -1, 51, -120, 51, -1, -103, -69, -120, -1, -86, -35, -103, -1, -103, -52, -120, -1, 119, -69, 119, -1, 17, -86, 68, -1, 17, -120, 34, -1, -86, -52, -86, -1, -35, -18, -35, -1, 102, -69, 102, -1, 68, -103, 85, -1, -120, -35, -103, -1, 68, 102, 68, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, -114, 0, 0, 0, -1, 34, 85, 51, -1, 34, 119, 34, -1, 51, -103, 51, -1, 17, 119, 34, -1, 51, -120, 51, -1, -86, -1, -86, -1, -103, -35, -120, -1, -86, -35, -52, -1, -103, -35, -103, -1, 119, -69, 102, -1, -103, -86, -120, -1, -120, -52, -120, -1, -35, -1, -52, -1, -18, -18, -18, -1, -69, -35, -86, -1, 51, 68, 51, 120, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 76, 0, 0, 0, -1, 17, 34, 17, -1, 68, -86, 68, -1, 17, 102, 17, -1, 34, 119, 34, -1, 17, 119, 17, -1, 51, -103, 68, -1, 17, -120, 68, -1, -120, -69, 119, -1, -35, -18, -52, -1, -52, -18, -69, -1, -52, -35, -69, -1, -69, -35, -69, -1, -120, -18, -120, -1, -120, -35, -120, -1, -86, -18, -86, -1, -35, -1, -35, -1, 119, -86, 119, -1, 0, 0, 0, 17, 0, 0, 0, 0, -1, -1, -1, -75, 0, 0, 0, -1, 51, -120, 68, -1, 102, -35, 119, -1, 119, -18, 119, -1, 51, -120, 51, -1, 0, 85, 0, -1, 68, -120, 68, -1, 68, 102, 51, -1, 68, 102, 51, -1, 85, -103, 68, -1, 119, -69, 119, -1, -52, -35, -69, -1, -52, -1, -52, -1, -103, -18, -103, -1, 119, -69, 119, -1, 85, -35, 102, -1, 102, -69, 119, -1, 85, -103, 85, -1, 17, 68, 17, 122, 0, 0, 0, 50, 0, 0, 0, -1, 17, 34, 17, -1, 34, -120, 51, -1, 68, -120, 68, -1, 102, -52, 119, -1, 17, 119, 34, -1, 17, 102, 17, -1, -120, -69, 102, -1, 119, -120, 85, -1, 85, 102, 51, -1, 85, -103, 85, -1, 102, -69, 102, -1, -69, -35, -69, -1, -103, -35, -120, -1, -103, -35, -120, -1, -120, -69, 119, -1, 119, -35, 119, -1, 34, -103, 51, -1, 34, 119, 34, -1, 51, -120, 51, -41, 0, 0, 0, 111, 0, 0, 0, -1, 51, 85, 51, -1, 0, 102, 0, -1, 85, -69, 119, -1, -103, -35, -86, -1, 17, 119, 34, -1, 51, 119, 51, -1, 119, -86, 102, -1, 102, -103, 85, -1, 102, -103, 85, -1, 102, -120, 85, -1, 119, -86, 102, -1, -120, -69, 119, -1, 68, 119, 51, -1, 119, -86, 102, -1, -103, -69, -120, -1, -35, -18, -69, -1, 119, -86, 102, -1, 51, -120, 51, -1, 68, -86, 68, -18, 0, 0, 0, -92, 0, 0, 0, -1, 68, -120, 68, -1, 51, -69, 68, -1, -120, -18, -103, -1, 51, -120, 51, -1, 17, 102, 17, -1, 102, -103, 85, -1, 102, -120, 85, -1, 102, -120, 68, -1, 102, -120, 85, -1, 102, -120, 85, -1, 102, -103, 85, -1, 85, -120, 68, -1, 51, 68, 34, -1, 85, 119, 68, -1, -52, -35, -86, -1, -52, -35, -86, -1, -52, -52, -69, -1, -69, -35, -86, -1, 68, -120, 68, -19, 0, 0, 0, -54, 0, 0, 0, -1, -120, -69, -120, -1, -86, -18, -86, -1, 68, -86, 85, -1, 34, 102, 34, -1, 17, 102, 17, -1, 102, -86, 85, -1, 102, -103, 85, -1, 102, -120, 85, -1, 102, -120, 85, -1, 102, -103, 85, -1, 102, -120, 85, -1, 85, 119, 68, -1, 68, 119, 51, -1, 68, 102, 51, -1, -69, -52, -86, -1, -35, -35, -69, -1, -18, -18, -52, -1, -86, -69, -103, -1, 17, 85, 17, -19, 0, 0, 0, -92, 0, 0, 0, -1, 68, 119, 68, -1, 119, -69, 119, -1, 17, 119, 17, -1, 0, 102, 17, -1, 0, 85, 0, -1, 102, -86, 85, -1, 102, -103, 85, -1, 102, -103, 85, -1, 102, -103, 85, -1, 119, -86, 102, -1, 102, -86, 85, -1, 85, -120, 68, -1, 68, -120, 68, -1, 34, 102, 17, -1, 68, -120, 68, -1, -18, -18, -52, -1, -86, -52, -103, -1, 17, -120, 34, -1, 34, -120, 34, -19, 0, 0, 0, 113, 0, 0, 0, -1, 17, 51, 17, -1, 34, -103, 51, -1, 34, -120, 34, -1, 17, 102, 17, -1, 0, 68, 0, -1, 85, -103, 85, -1, 85, -120, 68, -1, 102, -103, 85, -1, 102, -103, 85, -1, 102, -103, 85, -1, 85, -103, 85, -1, 85, -86, 85, -1, 51, 102, 51, -1, 17, 102, 17, -1, 85, -86, 85, -1, 119, -86, 102, -1, 68, -86, 68, -1, 85, -52, 85, -1, 68, -69, 68, -17, 0, 0, 0, 87, 0, 0, 0, -1, 34, 51, 34, -1, 51, -103, 68, -1, 34, 102, 34, -1, 68, -120, 68, -1, 0, 68, 0, -1, 34, 119, 34, -1, -120, -69, 119, -1, 102, -103, 85, -1, 85, -86, 85, -1, 85, -103, 85, -1, 68, -120, 68, -1, 68, -103, 68, -1, 68, -103, 68, -1, 34, -120, 34, -1, 34, -120, 51, -1, 34, -120, 51, -1, 68, -69, 85, -1, 102, -52, 102, -1, 68, -103, 68, -36, 0, 0, 0, 22, 0, 0, 0, -1, 0, 17, 0, -1, 68, -103, 85, -1, 34, 119, 34, -1, 17, 85, 17, -1, 0, 51, 0, -1, 0, 102, 17, -1, 51, -120, 51, -1, 68, -120, 68, -1, 85, -69, 102, -1, 85, -86, 85, -1, 102, -69, 102, -1, -52, -35, -69, -1, -86, -35, -86, -1, 34, -120, 34, -1, 34, 119, 34, -1, 51, -86, 68, -1, 85, -52, 85, -1, 102, -18, 102, -1, 51, 102, 51, -118, 0, 0, 0, 0, -1, -1, -1, -119, 0, 0, 0, -1, 85, 119, 85, -1, 119, -52, 119, -1, 17, 119, 17, -1, 0, 68, 0, -1, 0, 68, 0, -1, 0, 85, 0, -1, 0, 85, 0, -1, 0, 85, 17, -1, 102, -69, 102, -1, -69, -35, -86, -1, -18, -18, -18, -1, 102, -103, 102, -1, 0, 119, 34, -1, 34, -86, 68, -1, 68, -69, 85, -1, -69, -18, -86, -1, 119, -35, 119, -1, 0, 17, 0, 33, 0, 0, 0, 0, -1, -1, -1, 32, 0, 0, 0, -1, 0, 0, 0, -1, 119, -69, 119, -1, -120, -52, -120, -1, 119, -52, -103, -1, 34, -120, 51, -1, 102, -86, 119, -1, 34, 102, 34, -1, 0, 68, 0, -1, 68, -69, 102, -1, 85, -86, 85, -1, -103, -18, -103, -1, 85, -35, 119, -1, 102, -35, -120, -1, 51, 119, 51, -1, 17, 119, 34, -1, -103, -35, -120, -1, 68, 102, 68, -115, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 119, 0, 0, 0, -1, 17, 17, 17, -1, 119, -52, -120, -1, 68, -1, -86, -1, 17, -120, 68, -1, 51, -103, 68, -1, 119, -69, 119, -1, 34, 102, 34, -1, 68, -86, 85, -1, 85, -69, 102, -1, 119, -35, 119, -1, 85, -52, 119, -1, 102, -35, 119, -1, 68, -52, 85, -1, 85, -69, 85, -1, -103, -86, -120, -1, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, -117, 0, 0, 0, -1, 17, 17, 17, -1, 85, -103, 85, -1, 51, -103, 51, -1, 102, -35, 102, -1, 85, -52, 102, -1, 17, 68, 17, -1, 34, -103, 51, -1, 68, -52, 85, -1, 51, -103, 68, -1, 34, -120, 34, -1, 51, -69, 68, -1, 85, -35, 119, -1, 119, -103, 102, -1, 17, 17, 17, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 104, 0, 0, 0, -1, 0, 0, 0, -1, 34, 68, 34, -1, 85, -86, 85, -1, 51, -103, 68, -1, 68, -86, 68, -1, 68, -69, 85, -1, 102, -35, 102, -1, 85, -86, 85, -1, 119, -69, 102, -1, 68, -120, 68, -1, 34, 51, 34, -1, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 11, 0, 0, 0, 109, 0, 0, 0, -1, 0, 0, 0, -1, 17, 34, 34, -1, 51, 85, 51, -1, 68, 119, 68, -1, 51, 102, 51, -1, 51, 85, 51, -1, 17, 34, 17, -1, 0, 0, 0, 101, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 84, 0, 0, 0, -120, 0, 0, 0, -101, 0, 0, 0, -106, 0, 0, 0, 110, 0, 0, 0, 59, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
	}

	public void onCast() {
		PlayContextProxy playContext = this.getPlayContext();
		PlayerProxy opponent = playContext.getOpponent();
		SpellListProxy opponentSpells = opponent.getSpellList();
		for (int i = 0; i < opponentSpells.getQty(); i++) {
			SpellProxy opponentSpell = opponentSpells.getSpellAt(i);
			opponentSpell.addConcentration(-1);
		}
	}
	
	public void onCreate() {
		spell.setId(3);
		spell.setName("Oblivion Emerald");
		spell.setDescription("Eliminates 1 point of concentration of all opponent's stones.");
		spell.setColor(SpellProxy.COLOR_GREEN);
		spell.setCost(4);
	}

	public void onEnergize() {
		// TODO Auto-generated method stub

	}

	public void onSwapPosition() {
		// TODO Auto-generated method stub

	}

	public void onTurnBegin() {
		// TODO Auto-generated method stub

	}

	public void onTurnEnd() {
		// TODO Auto-generated method stub

	}

}
