package com.stonespells.controllers.spells.eddition1;

import com.stonespells.controllers.spells.ISpellCommand;
import com.stonespells.controllers.spells.SpellCommand;
import com.stonespells.models.gameboard.PlayerProxy;
import com.stonespells.models.gameboard.SpellProxy;

public class Red2Spell extends SpellCommand implements ISpellCommand {

	public byte[] getImageBytes() {
		return new byte[] {0, 0, 0, 22, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 1, -28, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 118, 0, 0, 0, -113, 0, 0, 0, -88, 0, 0, 0, -89, 0, 0, 0, 118, 0, 0, 0, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 19, 0, 0, 0, 124, 0, 0, 0, -70, 0, 0, 0, -1, 102, 34, 51, -1, 119, 34, 51, -1, 119, 17, 34, -1, 119, 17, 34, -1, 85, 17, 34, -1, 34, 0, 17, -50, 0, 0, 0, 101, 0, 0, 0, 0, -52, 51, 102, 0, -52, 34, 85, 0, -69, 68, 102, 0, -69, 51, 85, 0, -69, 68, 102, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 59, 0, 0, 0, -92, 0, 0, 0, -1, 102, 17, 51, -1, -86, 34, 85, -1, -18, 17, 119, -1, -18, 68, 119, -1, -69, 0, 51, -1, -69, 0, 34, -1, -52, 0, 51, -1, -69, 0, 68, -1, -69, 17, 85, -1, 51, 17, 34, -88, 0, 0, 0, 63, 0, 0, 0, 0, -69, 68, 102, 0, -69, 51, 85, 0, -69, 68, 102, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 45, 0, 0, 0, -92, 0, 0, 0, -1, -120, 17, 85, -1, -69, 17, 85, -1, -1, 51, -69, -1, -1, 85, -69, -1, -1, 85, -86, -1, -18, 85, 119, -1, -69, 0, 51, -1, -69, 0, 51, -1, -52, 0, 68, -1, -35, 0, 68, -1, -35, 0, 68, -1, -120, 34, 68, -78, 0, 0, 0, 73, 0, 0, 0, 0, -69, 51, 85, 0, -69, 68, 102, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, -106, 0, 0, 0, -1, -120, 17, 68, -1, -69, 17, 85, -1, -103, 0, 34, -1, -1, 34, -120, -1, -1, 102, -52, -1, -18, 85, -103, -1, -35, 85, -120, -1, -52, 85, 102, -1, -86, 17, 51, -1, -52, 0, 68, -1, -52, 0, 68, -1, -35, 0, 85, -1, -35, 0, 85, -1, -120, 17, 51, -78, 0, 0, 0, 0, -69, 51, 85, 0, -69, 68, 102, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 99, 0, 0, 0, -1, 85, 17, 51, -1, -35, 17, 119, -1, -103, 17, 51, -1, -103, 0, 34, -1, -69, 51, 85, -1, -52, 102, 119, -1, -69, 85, 102, -1, -52, 102, 119, -1, -69, 119, -120, -1, -69, 85, 102, -1, -69, 0, 34, -1, -52, 0, 51, -1, -52, 0, 68, -1, -52, 0, 68, -1, -52, 0, 68, -1, 51, 17, 17, -106, 0, 0, 0, 0, -69, 68, 102, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, -76, 0, 0, 0, -1, -103, 34, 102, -1, -35, 34, -120, -1, -69, 51, 102, -1, -86, 51, 85, -1, -52, -120, -120, -1, -35, -69, -86, -1, -52, 119, -120, -1, -86, 68, 102, -1, -69, 119, 119, -1, -52, -103, -103, -1, -86, 17, 51, -1, -69, 0, 34, -1, -18, 0, 102, -1, -69, 0, 51, -1, -69, 0, 51, -1, -52, 0, 51, -1, 0, 0, 0, 18, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 87, 0, 0, 0, -1, 68, 17, 34, -1, -1, 0, -103, -1, -1, 34, -86, -1, -18, 51, -103, -1, -52, 85, 119, -1, -52, -103, -103, -1, -52, -103, -103, -1, -103, 68, 85, -1, 119, 0, 34, -1, -120, 17, 51, -1, -103, 34, 51, -1, -86, 68, 85, -1, -69, 51, 68, -1, -86, 0, 34, -1, -52, 0, 51, -1, -52, 0, 68, -1, -52, 0, 51, -1, 85, 17, 34, 123, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, -96, 0, 0, 0, -1, 119, 17, 51, -1, -18, 0, 102, -1, -1, 34, -69, -1, -1, 51, -86, -1, -52, 68, 119, -1, -69, 119, -120, -1, -120, 51, 68, -1, 102, 17, 34, -1, 119, 17, 34, -1, -120, 17, 51, -1, -103, 17, 51, -1, -120, 0, 34, -1, -35, -86, -86, -1, -52, -120, -120, -1, -86, 17, 34, -1, -86, 0, 51, -1, -69, 0, 51, -1, -86, 17, 68, -30, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, -47, 0, 0, 0, -1, -103, 17, 51, -1, -18, 0, 102, -1, -1, 34, -86, -1, -18, 51, -120, -1, -52, 85, 119, -1, -103, 51, 85, -1, 119, 17, 34, -1, 119, 17, 34, -1, 119, 17, 34, -1, -120, 17, 51, -1, -103, 17, 51, -1, -120, 17, 51, -1, -69, 119, 119, -1, -52, -120, -120, -1, -69, 17, 68, -1, -69, 0, 51, -1, -86, 0, 34, -1, -18, 0, 85, -1, 0, 0, 0, 10, 0, 0, 0, 0, -1, -1, -1, -15, 0, 0, 0, -1, -103, 17, 34, -1, -69, 0, 68, -1, -69, 34, 85, -1, -35, 102, -120, -1, -69, 85, 119, -1, 119, 0, 34, -1, -120, 17, 51, -1, 119, 17, 34, -1, -120, 17, 34, -1, -103, 17, 51, -1, -86, 17, 51, -1, -103, 0, 34, -1, -86, 34, 68, -1, -69, 51, 68, -1, -35, 0, 68, -1, -18, 0, 102, -1, -18, 17, -120, -1, -1, 0, 102, -1, 17, 0, 0, 27, 0, 0, 0, 72, 0, 0, 0, -1, 34, 0, 17, -1, -103, 0, 34, -1, -103, 0, 17, -1, -52, 85, 102, -1, -18, -103, -103, -1, -86, 68, 85, -1, 119, 17, 51, -1, -120, 17, 34, -1, -120, 17, 34, -1, -103, 17, 51, -1, -35, 0, 102, -1, -18, 0, 102, -1, -69, 17, 51, -1, -52, 102, 119, -1, -35, 17, 102, -1, -18, 0, 102, -1, -18, 0, 119, -1, -35, 0, 102, -1, -35, 17, 102, -1, 17, 0, 0, 30, 0, 0, 0, 91, 0, 0, 0, -1, 51, 17, 17, -1, -86, 0, 51, -1, -103, 17, 34, -1, -52, 51, 85, -1, -18, -103, -86, -1, -103, 34, 68, -1, 119, 0, 51, -1, -120, 17, 51, -1, -120, 17, 51, -1, -52, 0, 68, -1, -18, 0, 102, -1, -35, 17, 85, -1, -69, 68, 85, -1, -18, -120, -86, -1, -35, 51, -120, -1, -35, 0, 102, -1, -35, 0, 102, -1, -52, 0, 68, -1, -86, 34, 68, -38, 0, 0, 0, 0, -1, -1, -1, -121, 0, 0, 0, -1, 85, 17, 34, -1, -86, 17, 51, -1, -86, 17, 51, -1, -69, 17, 68, -1, -52, -120, -120, -1, 119, 17, 51, -1, -120, 17, 51, -1, -103, 17, 51, -1, -52, 17, 85, -1, -52, 0, 68, -1, -69, 17, 51, -1, -52, 34, 85, -1, -69, 85, 102, -1, -35, -120, -69, -1, -1, 102, -35, -1, -1, 17, -103, -1, -18, 17, 119, -1, -52, 17, 85, -1, 85, 17, 34, 113, 0, 0, 0, 0, -1, -1, -1, 123, 0, 0, 0, -1, 85, 17, 34, -1, -69, 17, 68, -1, -52, 17, 68, -1, -69, 17, 68, -1, -52, 85, 119, -1, -120, 0, 34, -1, -120, 17, 51, -1, -103, 0, 34, -1, -52, 34, 85, -1, -52, 34, 85, -1, -35, 102, -120, -1, -35, 0, 119, -1, -86, 17, 68, -1, -69, 17, 85, -1, -1, 68, -69, -1, -1, 17, -103, -1, -18, 17, -120, -1, -86, 34, 85, -1, 34, 0, 17, 49, 0, 0, 0, 0, -1, -1, -1, 109, 0, 0, 0, -1, 68, 17, 34, -1, -52, 0, 68, -1, -69, 17, 51, -1, -69, 17, 68, -1, -69, 51, 85, -1, -120, 17, 51, -1, -69, 102, 119, -1, -52, 102, 119, -1, -18, -69, -69, -1, -1, -69, -52, -1, -1, 119, -69, -1, -1, 0, -103, -1, -1, 0, -103, -1, -35, 68, -103, -1, -1, 17, -103, -1, -18, 17, 119, -1, -69, 34, 85, -1, 68, 0, 34, 97, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 85, 0, 0, 0, -1, 51, 17, 17, -1, -69, 0, 51, -1, -69, 17, 51, -1, -52, 17, 68, -1, -69, 17, 68, -1, -86, 17, 51, -1, -35, -120, -120, -1, -18, -103, -86, -1, -1, -35, -35, -1, -35, 119, -120, -1, -18, 0, 102, -1, -1, 0, -103, -1, -1, 17, -86, -1, -1, 17, -120, -1, -18, 17, -120, -1, -86, 34, 85, -1, 51, 0, 17, -120, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, -2, 0, 0, 0, -1, -52, 0, 85, -1, -69, 0, 51, -1, -69, 17, 51, -1, -69, 0, 68, -1, -69, 0, 51, -1, -69, 0, 34, -1, -69, 0, 34, -1, -52, 17, 68, -1, -69, 0, 34, -1, -52, 0, 85, -1, -52, 0, 68, -1, -35, 17, 85, -1, -69, 17, 68, -1, -103, 34, 68, -1, 51, 0, 34, 124, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, -1, 0, 0, 0, -1, -18, 0, 102, -1, -52, 0, 68, -1, -69, 0, 51, -1, -52, 0, 51, -1, -69, 17, 51, -1, -69, 0, 51, -1, -35, 0, 68, -1, -69, 0, 51, -1, -69, 0, 51, -1, -52, 17, 68, -1, -86, 34, 68, -1, -69, 34, 85, -1, 85, 17, 34, -1, 34, 0, 17, 91, 0, 0, 0, 0, -69, 34, 102, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, -106, 0, 0, 0, -1, 85, 17, 34, -1, -69, 17, 68, -1, -52, 17, 85, -1, -52, 0, 68, -1, -52, 17, 68, -1, -69, 0, 51, -1, -69, 0, 51, -1, -69, 0, 51, -1, -120, 17, 51, -1, 102, 17, 34, -1, 68, 17, 34, -1, 34, 0, 17, 122, 0, 0, 0, 61, 0, 0, 0, 0, -69, 51, 102, 0, -69, 51, 102, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 7, 0, 0, 0, 123, 0, 0, 0, -28, 0, 0, 0, -1, 17, 0, 0, -1, 34, 0, 17, -1, 17, 0, 0, -1, 34, 0, 17, -1, 34, 0, 17, -1, 34, 0, 17, -1, 0, 0, 0, -96, 0, 0, 0, 101, 0, 0, 0, 45, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -69, 51, 102, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 31, 0, 0, 0, 62, 0, 0, 0, 41, 0, 0, 0, 51, 0, 0, 0, 55, 0, 0, 0, 53, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1};
	}

	public void onCast() {
		// TODO Auto-generated method stub
		PlayerProxy oponent = getPlayContext().getOpponent();
		oponent.addLife(-5);
		
		int spellPosition = getSpell().getPosition();
		if (oponent.getSpellList().getSpellAt(spellPosition).getColor() == SpellProxy.COLOR_BLUE) {
			oponent.addLife(-2);
		}
	}

	public void onCreate() {
		getSpell().setId(10);
		getSpell().setName("Fire Amber");
		getSpell().setDescription("Oponent takes 5 damage. If he has a blue spell at same position than Fire Amber, he takes plus 2 damage.");
		getSpell().setColor(SpellProxy.COLOR_RED);
		getSpell().setCost(4);
	}

	public void onEnergize() {
		// TODO Auto-generated method stub

	}

	public void onSwapPosition() {
		// TODO Auto-generated method stub

	}

	public void onTurnBegin() {
		// TODO Auto-generated method stub

	}

	public void onTurnEnd() {
		// TODO Auto-generated method stub

	}

}
