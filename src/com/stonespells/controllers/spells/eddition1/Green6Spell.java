package com.stonespells.controllers.spells.eddition1;

import com.stonespells.controllers.spells.ISpellCommand;
import com.stonespells.controllers.spells.SpellCommand;
import com.stonespells.models.gameboard.SpellProxy;

public class Green6Spell extends SpellCommand implements ISpellCommand {

	public byte[] getImageBytes() {
		return new byte[] {0, 0, 0, 22, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 1, -72, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 102, 0, 102, -120, 85, 0, 102, -120, 102, 0, -120, -86, 102, 57, 0, 0, 0, -94, 0, 0, 0, -1, 34, 34, 17, -1, 17, 17, 17, -115, 0, 0, 0, 0, 119, -120, 102, 0, 119, -120, 102, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 102, 0, 102, -120, 85, 0, 102, -120, 102, 117, 0, 0, 0, -1, 0, 0, 0, -1, 85, 119, 85, -1, 119, -69, 102, -1, 102, -120, 68, -1, 34, 34, 17, 111, 0, 0, 0, 0, -52, -35, -120, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 102, 74, 0, 0, 0, -77, 0, 0, 0, -1, 51, 68, 34, -1, 119, -86, 102, -1, 119, -86, 102, -1, 102, -103, 85, -1, 119, -120, 85, -1, 102, 119, 85, -1, 0, 0, 0, 56, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 85, -126, 0, 0, 0, -1, 0, 17, 0, -1, 85, 119, 68, -1, -120, -52, 119, -1, 102, -86, 102, -1, -120, -69, 102, -1, -103, -69, 119, -1, -103, -86, 119, -1, -120, -103, 102, -1, 85, 85, 68, -95, 0, 0, 0, 4, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, 102, -120, 85, 0, 102, -120, 85, 0, 102, -120, 85, 53, 0, 0, 0, -98, 0, 0, 0, -1, 34, 34, 17, -1, 119, -86, 85, -1, 119, -69, 85, -1, 119, -86, 85, -1, -120, -86, 102, -1, -120, -103, 119, -1, -120, -103, 119, -1, -86, -69, -103, -1, -86, -69, -103, -1, 119, -120, 85, -1, 51, 68, 34, -109, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, 102, -120, 85, 0, 102, -120, 85, 126, 0, 0, 0, -1, 0, 0, 0, -1, 68, 85, 51, -1, -120, -52, 85, -1, -120, -52, 85, -1, 119, -86, 85, -1, 119, -103, 85, -1, -120, -120, 102, -1, -120, -103, 119, -1, -120, -103, 119, -1, -103, -103, 119, -1, -120, -103, 102, -1, 102, -120, 85, -1, 119, -103, 85, -4, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 27, 0, 0, 0, -107, 0, 0, 0, -1, 17, 34, 17, -1, 102, -103, 68, -1, -103, -35, 85, -1, -120, -52, 85, -1, 102, -103, 68, -1, 119, -120, 68, -1, -120, -120, 85, -1, -120, -103, 102, -1, -120, -103, 102, -1, -103, -103, 119, -1, -120, -103, 102, -1, 85, 119, 68, -1, -120, -69, 102, -1, -120, -69, 102, -1, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 102, 0, 0, 0, -1, 0, 0, 0, -1, 51, 68, 34, -1, 102, -86, 68, -1, -120, -52, 85, -1, 119, -86, 68, -1, 102, 119, 51, -1, 119, -120, 85, -1, -120, -120, 85, -1, -120, -120, 85, -1, -120, -120, 102, -1, -103, -103, 119, -1, 119, -120, 85, -1, 51, 119, 51, -1, -120, -52, 102, -1, -103, -69, 119, -1, 51, 68, 34, -106, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, -113, 0, 0, 0, -1, 17, 17, 17, -1, 68, 119, 51, -1, 68, -120, 34, -1, 102, -86, 68, -1, 102, -103, 68, -1, 102, 119, 68, -1, 119, -120, 85, -1, 119, -120, 85, -1, 119, -120, 85, -1, -120, -120, 102, -1, -103, -103, 119, -1, 85, -120, 68, -1, 34, 119, 34, -1, -120, -52, 102, -1, 119, -86, 102, -1, 17, 17, 17, -118, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, -1, 78, 0, 0, 0, -73, 0, 0, 0, -1, 34, 51, 17, -1, 85, -103, 51, -1, 68, -120, 51, -1, 85, -103, 51, -1, 102, -103, 68, -1, 119, 119, 68, -1, 119, -120, 85, -1, 119, -120, 85, -1, 119, -120, 85, -1, -120, -103, 102, -1, -103, -103, 119, -1, 68, 119, 51, -1, 51, 119, 34, -1, 119, -69, 85, -1, 102, 119, 68, -1, 0, 0, 0, 94, 0, 0, 0, 0, -120, -103, 119, 0, -1, -1, -1, 62, 0, 0, 0, -1, 17, 17, 0, -1, 51, 102, 34, -1, 85, -103, 51, -1, 68, -120, 51, -1, 85, -103, 51, -1, 102, 119, 51, -1, 102, 119, 51, -1, 119, -120, 68, -1, 119, -120, 68, -1, 119, -120, 85, -1, -103, -103, 119, -1, -120, -120, 85, -1, 68, 119, 51, -1, 102, -103, 51, -1, 119, -86, 85, -1, 51, 68, 34, -89, 0, 0, 0, 62, 0, 0, 0, 0, -120, -86, 119, 0, -120, -103, 119, 0, -1, -1, -1, -89, 0, 0, 0, -1, 68, 85, 34, -1, 119, -69, 17, -1, 85, -103, 34, -1, 85, 119, 51, -1, 85, 119, 34, -1, 85, 119, 34, -1, 102, 119, 34, -1, 102, 119, 51, -1, 119, -120, 85, -1, -103, -103, 119, -1, 102, -120, 68, -1, 102, -120, 51, -1, -120, -69, 85, -1, 102, -120, 68, -1, 0, 17, 0, -125, 0, 0, 0, 0, -120, -103, 102, 0, -120, -103, 119, 0, -120, -86, 119, 0, -120, -103, 119, 0, -1, -1, -1, -96, 0, 0, 0, -1, 68, 102, 34, -1, -120, -69, 34, -1, 85, 119, 17, -1, 85, 102, 34, -1, 85, 119, 34, -1, 85, 119, 34, -1, 85, 119, 34, -1, -120, -120, 85, -1, 119, -103, 102, -1, 68, 119, 34, -1, 102, -103, 51, -1, -120, -69, 85, -1, 68, 85, 51, -1, 0, 0, 0, 90, 0, 0, 0, 0, 119, -103, 102, 0, -120, -103, 102, 0, -120, -103, 119, 0, -120, -86, 119, 0, -120, -103, 119, 0, -1, -1, -1, 55, 0, 0, 0, -1, 0, 0, 0, -1, 68, 85, 17, -1, 85, 102, 34, -1, 85, 119, 34, -1, 85, 119, 34, -1, 85, 119, 51, -1, -120, -120, 85, -1, 102, -120, 51, -1, 51, 119, 17, -1, 119, -86, 68, -1, 119, -103, 85, -1, 17, 34, 17, -105, 0, 0, 0, 46, 0, 0, 0, 0, 119, -120, 102, 0, 119, -103, 102, 0, -120, -103, 102, 0, -120, -103, 119, 0, -120, -86, 119, 0, -120, -103, 119, 0, -1, -1, -1, 0, -1, -1, -1, 114, 0, 0, 0, -1, 17, 17, 17, -1, 85, 102, 34, -1, 102, 119, 51, -1, 102, 102, 51, -1, 119, -120, 68, -1, 119, -69, 68, -1, 68, -103, 34, -1, 119, -69, 68, -1, 85, 119, 51, -1, 0, 0, 0, 111, 0, 0, 0, 0, 119, -120, 102, 0, 119, -120, 102, 0, 119, -120, 102, 0, 119, -103, 102, 0, -120, -103, 102, 0, -120, -103, 119, 0, -120, -86, 119, 0, -120, -103, 119, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, -111, 0, 0, 0, -1, 51, 51, 17, -1, 102, 102, 34, -1, 85, 119, 34, -1, 102, -86, 34, -1, 102, -69, 51, -1, 119, -86, 68, -1, 51, 51, 34, -84, 0, 0, 0, 67, 0, 0, 0, 0, 119, -120, 102, 0, 119, -120, 102, 0, 119, -120, 102, 0, 119, -120, 102, 0, 119, -103, 102, 0, -120, -103, 102, 0, -120, -103, 119, 0, -120, -86, 119, 0, -120, -103, 119, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 35, 0, 0, 0, -1, 0, 0, 0, -1, 68, 85, 34, -1, 102, -69, 0, -1, 102, -86, 34, -1, 85, 119, 51, -1, 17, 17, 0, -122, 0, 0, 0, 0, 119, -120, 85, 0, 119, -120, 102, 0, 119, -120, 102, 0, 119, -120, 102, 0, 119, -120, 102, 0, 119, -120, 102, 0, 119, -103, 102, 0, -120, -103, 102, 0, -120, -103, 119, 0, -120, -86, 119, 0, -120, -103, 119, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 88, 0, 0, 0, -1, 0, 17, 0, -1, 68, 85, 34, -1, 34, 51, 34, -1, 0, 0, 0, 89, 0, 0, 0, 0, 119, -120, 85, 0, 119, -120, 85, 0, 119, -120, 102, 0, 119, -120, 102, 0, 119, -120, 102, 0, 119, -120, 102, 0, 119, -120, 102, 0, 119, -103, 102, 0, -120, -103, 102, 0, -120, -103, 119, 0, -120, -86, 119, 0, -120, -103, 119, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 46, 0, 0, 0, -105, 0, 0, 0, 106, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1};
	}

	public void onCast() {
		// TODO Auto-generated method stub

	}

	public void onCreate() {
		spell.setId(8);
		spell.setName("Spell vermelha bonita");
		spell.setDescription("O oponente leva 1 de dano.");
		spell.setColor(SpellProxy.COLOR_RED);
		spell.setCost(2);

	}

	public void onEnergize() {
		// TODO Auto-generated method stub

	}

	public void onSwapPosition() {
		// TODO Auto-generated method stub

	}

	public void onTurnBegin() {
		// TODO Auto-generated method stub

	}

	public void onTurnEnd() {
		// TODO Auto-generated method stub

	}

}
