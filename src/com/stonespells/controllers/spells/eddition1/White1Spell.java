package com.stonespells.controllers.spells.eddition1;

import com.stonespells.controllers.spells.ISpellCommand;
import com.stonespells.controllers.spells.SpellCommand;
import com.stonespells.models.gameboard.SpellProxy;

public class White1Spell extends SpellCommand implements ISpellCommand {

	public byte[] getImageBytes() {
		return new byte[] {0, 0, 0, 22, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 1, -72, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 4, 0, 0, 0, 70, 0, 0, 0, -122, 0, 0, 0, -68, 0, 0, 0, -48, 0, 0, 0, -70, 0, 0, 0, -127, 0, 0, 0, 73, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 85, 0, 0, 0, -1, 0, 0, 0, -1, 34, 34, 34, -1, 85, 85, 85, -1, -120, -120, -120, -1, -103, -103, -103, -1, 119, 119, 119, -1, 85, 85, 85, -1, 34, 34, 34, -1, 0, 0, 0, 108, 0, 0, 0, 2, 0, 0, 0, 0, -103, -103, -103, 0, -103, -103, -103, 0, -103, -103, -120, 0, -103, -103, -103, 0, -103, -103, -103, 0, -103, -103, -103, 0, -103, -103, -103, 0, -1, -1, -1, 0, -1, -1, -1, 91, 0, 0, 0, -1, 0, 0, 0, -1, -120, -120, -120, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -69, -69, -69, -1, -103, -103, -103, -1, 68, 68, 68, -1, 0, 0, 0, 78, 0, 0, 0, 0, -103, -103, -103, 0, -103, -103, -120, 0, -103, -103, -103, 0, -103, -103, -103, 0, -103, -103, -103, 0, -103, -103, -103, 0, -1, -1, -1, 11, 0, 0, 0, -1, 0, 0, 0, -1, -120, -120, -120, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, 119, -120, 119, -1, 17, 17, 17, -126, 0, 0, 0, 0, -103, -103, -120, 0, -103, -103, -103, 0, -103, -103, -103, 0, -103, -103, -103, 0, -103, -103, -103, 0, -1, -1, -1, 109, 0, 0, 0, -1, 68, 68, 68, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -86, -86, -86, -1, 51, 51, 51, -109, 0, 0, 0, 0, -103, -103, -103, 0, -103, -103, -103, 0, -103, -103, -103, 0, -103, -103, -103, 0, -1, -1, -1, -73, 0, 0, 0, -1, -120, -120, 119, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -69, -1, 51, 51, 51, -110, 0, 0, 0, 0, -103, -103, -103, 0, -103, -103, -103, 0, -103, -103, -103, 0, -1, -1, -1, -38, 0, 0, 0, -1, -86, -86, -103, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -35, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -69, -1, 51, 51, 51, -112, 0, 0, 0, 0, -103, -103, -120, 0, -103, -103, -120, 0, -1, -1, -1, -41, 0, 0, 0, -1, -86, -86, -103, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -35, -1, -18, -18, -18, -1, -1, -1, -18, -1, -18, -18, -18, -1, -18, -18, -35, -1, -35, -35, -35, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -35, -52, -1, -52, -52, -52, -1, -52, -52, -52, -1, -52, -52, -69, -1, 34, 34, 34, 126, 0, 0, 0, 0, -103, -120, -120, 0, -1, -1, -1, -76, 0, 0, 0, -1, -120, -120, 119, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -18, -18, -18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -18, -1, -18, -1, -18, -18, -18, -1, -35, -35, -35, -1, -52, -52, -52, -1, -35, -35, -52, -1, -52, -35, -52, -1, -35, -35, -52, -1, -69, -69, -86, -1, 17, 17, 17, 72, 0, 0, 0, 0, -1, -1, -1, -127, 0, 0, 0, -1, 85, 85, 85, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -18, -18, -18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -18, -18, -18, -1, -52, -35, -52, -1, -52, -35, -52, -1, -52, -35, -52, -1, -35, -35, -52, -1, -120, -120, 119, -1, 0, 0, 0, 1, 0, 0, 0, 55, 0, 0, 0, -1, 34, 34, 34, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -35, -1, -1, -1, -18, -1, -1, -1, -18, -1, -18, -18, -18, -1, -18, -18, -18, -1, -1, -1, -18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -18, -18, -18, -1, -35, -35, -35, -1, -52, -52, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, 34, 34, 34, 57, 0, 0, 0, 0, -1, -1, -1, -75, 0, 0, 0, -1, -120, -120, 119, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -35, -1, -35, -35, -35, -1, -35, -35, -52, -1, -35, -35, -35, -1, -35, -35, -35, -1, -35, -35, -35, -1, -18, -18, -35, -1, -1, -1, -18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -35, -35, -35, -1, -35, -35, -52, -1, -35, -35, -52, -1, 119, 102, 102, -103, 0, 0, 0, 0, -1, -1, -1, 76, 0, 0, 0, -1, 34, 34, 34, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -35, -1, -35, -35, -35, -1, -35, -35, -35, -1, -35, -35, -35, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -35, -1, -1, -1, -18, -1, -18, -18, -18, -1, -35, -35, -52, -1, -35, -35, -52, -1, -69, -86, -86, -36, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, -91, 0, 0, 0, -1, -120, 119, 119, -1, -18, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -35, -1, -35, -35, -35, -1, -35, -35, -35, -1, -35, -35, -35, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -52, -52, -69, -19, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 60, 0, 0, 0, -1, 17, 17, 17, -1, -69, -69, -86, -1, -18, -35, -52, -1, -35, -35, -52, -1, -18, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -35, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -52, -52, -69, -17, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 119, 0, 0, 0, -1, 34, 34, 34, -1, -35, -52, -52, -1, -18, -35, -52, -1, -18, -35, -52, -1, -18, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -18, -35, -35, -1, -18, -35, -35, -1, -52, -52, -69, -23, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, -120, 0, 0, 0, -1, 51, 51, 34, -1, -69, -69, -86, -1, -18, -35, -35, -1, -18, -35, -35, -1, -18, -35, -35, -1, -18, -35, -52, -1, -18, -35, -52, -1, -18, -35, -52, -1, -18, -35, -52, -1, -18, -35, -52, -1, -18, -35, -52, -1, -18, -35, -52, -1, -18, -35, -35, -1, -18, -35, -35, -1, -18, -18, -35, -1, 102, 102, 102, -116, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 114, 0, 0, 0, -1, 17, 17, 17, -1, -120, -120, -120, -1, -18, -35, -35, -1, -18, -35, -35, -1, -18, -35, -35, -1, -18, -35, -35, -1, -18, -35, -35, -1, -18, -35, -35, -1, -18, -35, -35, -1, -18, -35, -35, -1, -18, -35, -35, -1, -18, -18, -35, -1, -18, -18, -35, -1, -103, -103, -120, -1, 0, 0, 0, 35, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -52, -52, -69, 62, 0, 0, 0, -89, 0, 0, 0, -1, 51, 51, 51, -1, -103, -120, -120, -1, -52, -52, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -35, -35, -52, -1, -86, -86, -86, -1, 68, 68, 68, -87, 0, 0, 0, 64, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 0, 0, 0, -86, 0, 0, 0, -24, 0, 0, 0, -19, 0, 0, 0, -19, 0, 0, 0, -19, 0, 0, 0, -19, 0, 0, 0, -19, 0, 0, 0, -19, 0, 0, 0, -59, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1};
	}

	public void onCast() {
		// TODO Auto-generated method stub

	}

	public void onCreate() {
		spell.setId(14);
		spell.setName("White reconstruction");
		spell.setDescription("You get 1 hp if your opponent cast a spell in same position as white reconstruction");
		spell.setColor(SpellProxy.COLOR_WHITE);
		spell.setCost(2);

	}

	public void onEnergize() {
		// TODO Auto-generated method stub

	}

	public void onSwapPosition() {
		// TODO Auto-generated method stub

	}

	public void onTurnBegin() {
		// TODO Auto-generated method stub

	}

	public void onTurnEnd() {
		// TODO Auto-generated method stub

	}

}
